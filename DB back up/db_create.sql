-- public.auth_group definition

-- Drop table

-- DROP TABLE public.auth_group;

CREATE TABLE public.auth_group (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"name" varchar(150) NOT NULL,
	CONSTRAINT auth_group_name_key UNIQUE (name),
	CONSTRAINT auth_group_pkey PRIMARY KEY (id)
);
CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


-- public.auth_user definition

-- Drop table

-- DROP TABLE public.auth_user;

CREATE TABLE public.auth_user (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"password" varchar(128) NOT NULL,
	last_login timestamptz NULL,
	is_superuser bool NOT NULL,
	username varchar(150) NOT NULL,
	first_name varchar(150) NOT NULL,
	last_name varchar(150) NOT NULL,
	email varchar(254) NOT NULL,
	is_staff bool NOT NULL,
	is_active bool NOT NULL,
	date_joined timestamptz NOT NULL,
	CONSTRAINT auth_user_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_username_key UNIQUE (username)
);
CREATE INDEX auth_user_username_6821ab7c_like ON public.auth_user USING btree (username varchar_pattern_ops);


-- public."comment" definition

-- Drop table

-- DROP TABLE public."comment";

CREATE TABLE public."comment" (
	id int4 NOT NULL,
	media_id int4 NULL,
	media_type_id int4 NULL,
	"content" text NULL,
	comment_attribute_id int4 NULL,
	likes int4 NULL,
	dislike int4 NULL,
	created_at timestamp NULL,
	CONSTRAINT comment_pkey PRIMARY KEY (id)
);


-- public.django_content_type definition

-- Drop table

-- DROP TABLE public.django_content_type;

CREATE TABLE public.django_content_type (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	app_label varchar(100) NOT NULL,
	model varchar(100) NOT NULL,
	CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model),
	CONSTRAINT django_content_type_pkey PRIMARY KEY (id)
);


-- public.django_migrations definition

-- Drop table

-- DROP TABLE public.django_migrations;

CREATE TABLE public.django_migrations (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	app varchar(255) NOT NULL,
	"name" varchar(255) NOT NULL,
	applied timestamptz NOT NULL,
	CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);


-- public.django_session definition

-- Drop table

-- DROP TABLE public.django_session;

CREATE TABLE public.django_session (
	session_key varchar(40) NOT NULL,
	session_data text NOT NULL,
	expire_date timestamptz NOT NULL,
	CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);
CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);
CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


-- public."event" definition

-- Drop table

-- DROP TABLE public."event";

CREATE TABLE public."event" (
	id int4 NOT NULL,
	"name" varchar(128) NULL,
	CONSTRAINT event_pkey PRIMARY KEY (id)
);


-- public.instagram definition

-- Drop table

-- DROP TABLE public.instagram;

CREATE TABLE public.instagram (
	id int4 NOT NULL,
	kol_id int4 NULL,
	instagram_user_id varchar(128) NULL,
	"name" varchar(128) NULL,
	business_type varchar(128) NULL,
	posts int4 NULL,
	followers int4 NULL,
	CONSTRAINT instagram_pkey PRIMARY KEY (id)
);


-- public.instagram_post definition

-- Drop table

-- DROP TABLE public.instagram_post;

CREATE TABLE public.instagram_post (
	id int4 NOT NULL,
	post_id varchar(128) NULL,
	event_id int4 NULL,
	instagram_id int4 NULL,
	"content" text NULL,
	likes int4 NULL,
	hashtag varchar(128) NULL,
	created_at timestamp NULL,
	media_url varchar NULL,
	comments_count int4 NULL,
	CONSTRAINT instagram_post_pkey PRIMARY KEY (id)
);


-- public.instagram_response definition

-- Drop table

-- DROP TABLE public.instagram_response;

CREATE TABLE public.instagram_response (
	instagram_id int4 NULL,
	response text NULL,
	created_at timestamp NULL,
	id int4 NOT NULL,
	CONSTRAINT instagram_response_pk PRIMARY KEY (id)
);


-- public.kol_data_log definition

-- Drop table

-- DROP TABLE public.kol_data_log;

CREATE TABLE public.kol_data_log (
	id int4 NOT NULL,
	instagram_count int4 NULL,
	instagram_post_shared int4 NULL,
	kol_id int4 NULL,
	youtube_follower_count int4 NULL,
	youtube_video_published int4 NULL,
	created_at timestamp(6) NULL,
	CONSTRAINT kol_data_log_pkey PRIMARY KEY (id)
);


-- public.reputation definition

-- Drop table

-- DROP TABLE public.reputation;

CREATE TABLE public.reputation (
	kol_id int4 NULL,
	rating float8 NULL,
	rating_attribute_id float8 NULL,
	status varchar(128) NULL,
	reputation_at timestamp NULL,
	created_at timestamp NULL,
	id serial4 NOT NULL,
	CONSTRAINT reputation_pkey PRIMARY KEY (id)
);


-- public."session" definition

-- Drop table

-- DROP TABLE public."session";

CREATE TABLE public."session" (
	id int4 NOT NULL,
	"session" varchar(128) NULL,
	user_name varchar(128) NULL,
	expired_datetime timestamp NULL,
	CONSTRAINT session_pkey PRIMARY KEY (id)
);


-- public.student definition

-- Drop table

-- DROP TABLE public.student;

CREATE TABLE public.student (
	id int4 NOT NULL,
	"name" varchar(255) NULL,
	CONSTRAINT student_pkey PRIMARY KEY (id)
);


-- public.users definition

-- Drop table

-- DROP TABLE public.users;

CREATE TABLE public.users (
	id int4 NOT NULL,
	username varchar(128) NULL,
	"role" varchar NULL,
	created_at timestamp NULL,
	CONSTRAINT users_pkey PRIMARY KEY (id)
);


-- public.watching definition

-- Drop table

-- DROP TABLE public.watching;

CREATE TABLE public.watching (
	id int4 NOT NULL,
	session_id int4 NULL,
	kol_id int4 NULL,
	CONSTRAINT watching_pkey PRIMARY KEY (id)
);


-- public.youtube_channel definition

-- Drop table

-- DROP TABLE public.youtube_channel;

CREATE TABLE public.youtube_channel (
	id int4 NOT NULL,
	kol_id int4 NULL,
	channel_id varchar(255) NULL,
	channel_name varchar(255) NULL,
	followers int4 NULL,
	video_published int4 NULL,
	icon_url text NULL,
	CONSTRAINT youtube_channel_pkey PRIMARY KEY (id)
);


-- public.youtube_channel_response definition

-- Drop table

-- DROP TABLE public.youtube_channel_response;

CREATE TABLE public.youtube_channel_response (
	id int4 NOT NULL,
	created_at timestamp(6) NULL,
	response text NULL,
	youtube_channel_id int4 NULL,
	CONSTRAINT youtube_channel_response_pkey PRIMARY KEY (id)
);


-- public.auth_permission definition

-- Drop table

-- DROP TABLE public.auth_permission;

CREATE TABLE public.auth_permission (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	"name" varchar(255) NOT NULL,
	content_type_id int4 NOT NULL,
	codename varchar(100) NOT NULL,
	CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename),
	CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
	CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


-- public.auth_user_groups definition

-- Drop table

-- DROP TABLE public.auth_user_groups;

CREATE TABLE public.auth_user_groups (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	user_id int4 NOT NULL,
	group_id int4 NOT NULL,
	CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id),
	CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_user_groups_group_id_97559544 ON public.auth_user_groups USING btree (group_id);
CREATE INDEX auth_user_groups_user_id_6a12ed8b ON public.auth_user_groups USING btree (user_id);


-- public.auth_user_user_permissions definition

-- Drop table

-- DROP TABLE public.auth_user_user_permissions;

CREATE TABLE public.auth_user_user_permissions (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	user_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
	CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id),
	CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_user_user_permissions_permission_id_1fbb5f2c ON public.auth_user_user_permissions USING btree (permission_id);
CREATE INDEX auth_user_user_permissions_user_id_a95ead1b ON public.auth_user_user_permissions USING btree (user_id);


-- public.django_admin_log definition

-- Drop table

-- DROP TABLE public.django_admin_log;

CREATE TABLE public.django_admin_log (
	id int4 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 2147483647 START 1 CACHE 1 NO CYCLE),
	action_time timestamptz NOT NULL,
	object_id text NULL,
	object_repr varchar(200) NOT NULL,
	action_flag int2 NOT NULL,
	change_message text NOT NULL,
	content_type_id int4 NULL,
	user_id int4 NOT NULL,
	CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0)),
	CONSTRAINT django_admin_log_pkey PRIMARY KEY (id),
	CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id) REFERENCES public.auth_user(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);
CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


-- public.kol definition

-- Drop table

-- DROP TABLE public.kol;

CREATE TABLE public.kol (
	id int4 NOT NULL,
	"name" varchar(255) NULL,
	other_name varchar(255) NULL,
	youtube_id int4 NULL,
	instagram_id int4 NULL,
	color_code varchar(255) NULL,
	CONSTRAINT kol_pkey PRIMARY KEY (id),
	CONSTRAINT fk1o0m9nd9u6xelq0ve5j58ywlw FOREIGN KEY (youtube_id) REFERENCES public.youtube_channel(id)
);


-- public.youtube_video definition

-- Drop table

-- DROP TABLE public.youtube_video;

CREATE TABLE public.youtube_video (
	id int4 NOT NULL,
	channel_id int4 NULL,
	event_id int4 NULL,
	video_name varchar(255) NULL,
	likes int4 NULL,
	dislike int4 NULL,
	"views" int4 NULL,
	created_at timestamp(6) NULL,
	CONSTRAINT youtube_video_pkey PRIMARY KEY (id),
	CONSTRAINT fkfvxkhxpbmxvxlgxkpds15q2ga FOREIGN KEY (channel_id) REFERENCES public.youtube_channel(id)
);


-- public.auth_group_permissions definition

-- Drop table

-- DROP TABLE public.auth_group_permissions;

CREATE TABLE public.auth_group_permissions (
	id int8 NOT NULL GENERATED BY DEFAULT AS IDENTITY( INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START 1 CACHE 1 NO CYCLE),
	group_id int4 NOT NULL,
	permission_id int4 NOT NULL,
	CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id),
	CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
	CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED,
	CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED
);
CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);
CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


-- public.youtube_channel_youtube_videos definition

-- Drop table

-- DROP TABLE public.youtube_channel_youtube_videos;

CREATE TABLE public.youtube_channel_youtube_videos (
	youtube_channel_id int4 NOT NULL,
	youtube_videos_id int4 NOT NULL,
	CONSTRAINT uk_ktsiar25g9rwwo76x6y8ss9ag UNIQUE (youtube_videos_id),
	CONSTRAINT youtube_channel_youtube_videos_pkey PRIMARY KEY (youtube_channel_id, youtube_videos_id),
	CONSTRAINT fkcbhv2n7kdcfb2yvax0suychx6 FOREIGN KEY (youtube_channel_id) REFERENCES public.youtube_channel(id),
	CONSTRAINT fkgovthull1g6px5x847vom9fd9 FOREIGN KEY (youtube_videos_id) REFERENCES public.youtube_video(id)
);